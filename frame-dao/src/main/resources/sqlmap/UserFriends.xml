<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.frame.dao.UserFriendsDao">

	<!-- groupon 所有查询列 -->
	<sql id="QUERY_COLUMN_LIST">
		<![CDATA[
			id,
			from_user_id as fromUserId,
			to_user_id as toUserId,
			status,
			action_user_id as actionUserId,
			feature,
			created,
			modified,
			yn
		]]>
	</sql>

	<!-- groupon 查询列来源表-->
	<sql id="QUERY_FROM_TABLE"><![CDATA[FROM tb_user_friends]]></sql>
	
	<!-- 全部条件(更多功能可以通过queryData扩展实现)  -->
	<sql id="QUERY_WHERE_CLAUSE">
		<where>
			<if test="id != null"><![CDATA[AND id = #{id}]]></if>
			<if test="fromUserId != null"><![CDATA[AND from_user_id = #{fromUserId}]]></if>
			<if test="toUserId != null"><![CDATA[AND to_user_id = #{toUserId}]]></if>
			<if test="status != null"><![CDATA[AND status = #{status}]]></if>
			<if test="actionUserId != null"><![CDATA[AND action_user_id = #{actionUserId}]]></if>
			<if test="feature != null and feature != ''"><![CDATA[AND feature = #{feature}]]></if>
			<if test="created != null and created != ''"><![CDATA[AND created = #{created}]]></if>
			<if test="modified != null and modified != ''"><![CDATA[AND modified = #{modified}]]></if>
			<if test="yn != null "><![CDATA[AND yn = #{yn}]]></if>
		</where>
	</sql>
	
	<!-- 智能排序与分页 -->
	<sql id="QUERY_ORDER_LIMIT_CONDTION">
		<if test="orderField != null and orderField != '' and orderFieldType != null and orderFieldType != ''"><![CDATA[ORDER BY ${orderField} ${orderFieldType}]]></if>
		<if test="startIndex != null and startIndex &gt;= 0 and pageSize != null and pageSize &gt; 0"><![CDATA[LIMIT #{startIndex},#{pageSize}]]></if>
	</sql>

	<!-- 更新列字段,只要不为NULL则更新,除开主键列 -->
	<sql id="UPDATE_COLUMN_SET">
		<set>
			<if test="fromUserId != null"><![CDATA[from_user_id = #{fromUserId},]]></if>
			<if test="toUserId != null"><![CDATA[to_user_id = #{toUserId},]]></if>
			<if test="status != null"><![CDATA[status = #{status},]]></if>
			<if test="actionUserId != null"><![CDATA[action_user_id = #{actionUserId},]]></if>
			<if test="feature != null"><![CDATA[feature = #{feature},]]></if>
			<![CDATA[modified = now(),]]>
			<if test="yn != null"><![CDATA[yn = #{yn},]]></if>
		</set>
	</sql>

	<!-- 插入team记录 -->
	<insert id="insertEntry" parameterType="userFriends" useGeneratedKeys="true" keyProperty="id">
		<![CDATA[
			INSERT INTO tb_user_friends (from_user_id,to_user_id,status,action_user_id,feature,created,modified,yn)
			VALUES (#{fromUserId},#{toUserId},#{status},#{actionUserId},#{feature},now(),now(),#{yn})
		]]>
	</insert>
	
	<!-- 返回插入的编号,在事务开启状态下有效 -->
	<select id="lastSequence" resultType="int"><![CDATA[SELECT LAST_INSERT_ID() AS id]]></select>

	<!-- 删除记录,主键IN(array) -->
	<delete id="deleteByArrayKey" parameterType="java.lang.reflect.Array" >
		<![CDATA[DELETE FROM tb_user_friends WHERE id IN]]>
		<foreach collection="array" item="id" open="(" separator="," close=")">
			<![CDATA[#{id}]]>
		</foreach>
	</delete>

	<!-- 删除,通过条件 -->
	<update id="deleteByCondtion" parameterType="userFriends" >
		<![CDATA[DELETE FROM tb_user_friends]]>
		<include refid="QUERY_WHERE_CLAUSE"/>
	</update>

	<!-- 修改记录通过主键 -->
	<update id="updateByKey" parameterType="userFriends" >
		<![CDATA[UPDATE tb_user_friends]]>
		<include refid="UPDATE_COLUMN_SET"/>
		<![CDATA[WHERE id = #{id}]]>
	</update>

	<!-- 查询,通过主键IN(array) -->
	<select id="selectEntryArray" parameterType="java.lang.reflect.Array" resultType="userFriends">
		<![CDATA[SELECT]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE id IN]]>
		<foreach collection="array" item="id" open="(" separator="," close=")">
			<![CDATA[#{id}]]>
		</foreach>
	</select>

	<!-- 查询,通过条件 -->
	<select id="selectEntryList" parameterType="userFriends" resultType="userFriends">
		<![CDATA[SELECT]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<include refid="QUERY_WHERE_CLAUSE"/>
		<include refid="QUERY_ORDER_LIMIT_CONDTION"/>
	</select>

	<!-- 总数查询,通过条件 -->
	<select id="selectEntryListCount" parameterType="userFriends" resultType="int">
		<![CDATA[SELECT COUNT(id) AS dataCount]]>
		<include refid="QUERY_FROM_TABLE"/>
		<include refid="QUERY_WHERE_CLAUSE"/>
	</select>
	
	<!-- 改变好有关系 -->
	<update id="changeUserFriendStatus" parameterType="userFriends">
		<![CDATA[UPDATE `tb_user_friends` SET `status` = #{status}, `action_user_id` = #{actionUserId}
						WHERE `from_user_id` =  #{fromUserId} AND `to_user_id` = #{toUserId} and yn = 1]]>
	</update>
	
	<!-- 得到某个用户的好友列表 -->
	<select id="selectFriendsList" parameterType="userFriends" resultType="userFriends">
	<![CDATA[SELECT]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE (`from_user_id` = #{fromUserId} OR `to_user_id` = #{fromUserId})
				AND `status` = 2 and yn = 1]]>
		<include refid="QUERY_ORDER_LIMIT_CONDTION"/>
	</select>
	
	<select id="selectFriendsListCount" parameterType="userFriends" resultType="int">
	<![CDATA[SELECT count(id)]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE (`from_user_id` = #{fromUserId} OR `to_user_id` = #{fromUserId})
				AND `status` = 2 and yn = 1]]>
	</select>
	
	<!-- 查看某个用户被邀请的记录 -->
	<select id="selectPendingFriendsList" parameterType="userFriends" resultType="userFriends">
	<![CDATA[SELECT]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE (`from_user_id` = #{fromUserId} OR `to_user_id` = #{fromUserId}) AND `status` = 1 AND `action_user_id` != #{fromUserId} and yn = 1]]>
		<include refid="QUERY_ORDER_LIMIT_CONDTION"/>
	</select>
	
	<select id="selectPendingFriendsListCount" parameterType="userFriends" resultType="int">
	<![CDATA[SELECT count(id)]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE (`from_user_id` = #{fromUserId} OR `to_user_id` = #{fromUserId}) AND `status` = 1 AND `action_user_id` != #{fromUserId} and yn = 1]]>
	</select>
	
	
	<!-- 登录的用户访问其他用户的个人信息，我们应该能够获取好友请求的状态 -->
	<select id="selct2PFriendStatus" parameterType="userFriends" resultType="userFriends">
	<![CDATA[SELECT]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE `from_user_id` = #{fromUserId} AND `to_user_id` = #{toUserId} and yn = 1]]>
	</select>
	
	<!-- 登录的用户访问其他用户的个人信息，我们应该能够获取好友请求的状态 -->
	<select id="selct2PIsFriend" parameterType="userFriends" resultType="int">
	<![CDATA[SELECT count(id)]]>
		<include refid="QUERY_COLUMN_LIST"/>
		<include refid="QUERY_FROM_TABLE"/>
		<![CDATA[WHERE `from_user_id` = #{fromUserId} AND `to_user_id` = #{toUserId} AND `status` = 2 and yn = 1]]>
	</select>
	
	
	<!-- 删除好友 -->
	<update id="deleteFriends" parameterType="userFriends">
		<![CDATA[delete  from tb_user_friends WHERE `from_user_id` = #{fromUserId} AND `to_user_id` = #{toUserId}]]>
	</update>
</mapper>